syntax on
set tabstop=4
set shiftwidth=4
set expandtab
set nowrap
set autoindent
set hlsearch
set cursorline
set nocompatible

" 256 color 
set t_Co=256

" Set syntax highlighting
if has('syntax') && (&t_Co > 2)
	colorscheme zenburn2
endif


" Enable command <TAB> completion
set wildmode=list:longest,full

" Enable filetype detection
filetype on

" For C-like programming, have automatic indentation:
autocmd FileType c,cpp,slang,h set cindent

" For actual C (not C++) programming where comments have explicit end
" characters, if starting a new line in the middle of a comment automatically
" insert the comment leader characters:
autocmd FileType c,h set formatoptions+=ro

" For Perl programming, have things in braces indenting themselves:
autocmd FileType perl set smartindent

" Make searches case-insensitive, unless they contain upper-case letters:
set ignorecase
set smartcase

" Show the `best match so far' as search strings are typed:
set incsearch

" Have % bounce between angled brackets, as well as t'other kinds:
set matchpairs+=<:>
set matchpairs+={:}

" Allows for backspace of items not inserted in this 'insert session'
set backspace=2 

" Make the page splitters be blank
set fillchars=vert:\ ,stl:\ ,stlnc:\ 

" Show line numbers
set number

" Show matching brackets
set showmatch

" No word wrap
set nowrap 

" Use 'vim -t <funtion_name>'
"set tags=$RVR/syn/mainsh/tags
set nocst

" Show cursor position
set ruler

" Fix in SCREEN / tmux
set t_kb=

" Folding 
set foldmethod=marker

" Ignore whitespace on vimdiff
set diffopt+=iwhite

set history=700

" Gets the numeric keypad working in putty
:imap <Esc>Oq 1
:imap <Esc>Or 2
:imap <Esc>Os 3
:imap <Esc>Ot 4
:imap <Esc>Ou 5
:imap <Esc>Ov 6
:imap <Esc>Ow 7
:imap <Esc>Ox 8
:imap <Esc>Oy 9
:imap <Esc>Op 0
:imap <Esc>On .
:imap <Esc>OQ /
:imap <Esc>OR *
:imap <Esc>Ol +
:imap <Esc>OS -

au BufNewFile,BufRead Master.make set filetype=make
au BufNewFile,BufRead Master.hier set filetype=make

:autocmd BufRead,BufNewFile *.cmake,CMakeLists.txt,*.cmake.in runtime! indent/cmake.vim 
:autocmd BufRead,BufNewFile *.cmake,CMakeLists.txt,*.cmake.in setf cmake
:autocmd BufRead,BufNewFile *.ctest,*.ctest.in setf cmake

set diffexpr=MyDiff()
function MyDiff()
	let opt = ""
	if &diffopt =~ "icase"
	let opt = opt . "-i "
	endif
	if &diffopt =~ "iwhite"
	let opt = opt . "-w "
	endif
	silent execute "!diff -a --binary " . opt . v:fname_in . " " . v:fname_new ." > " . v:fname_out
endfunction

call pathogen#infect()
